{"version":3,"sources":["webpack:///./src/templates/blog-index-page.js","webpack:///./src/components/BlogRoll.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_BlogRoll__WEBPACK_IMPORTED_MODULE_3__","BlogIndexPage","_ref","frontmatter","data","markdownRemark","a","createElement","languageKey","className","style","backgroundImage","title","propTypes","PropTypes","shape","string","BlogRoll","render","posts","this","props","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","map","post","node","key","id","featuredpost","featuredimage","_PreviewCompatibleImage__WEBPACK_IMPORTED_MODULE_5__","imageInfo","image","alt","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","date","excerpt","React","Component","array","query","count","_public_static_d_3722544792_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOMY,EAAgB,SAAAC,GAAc,IAC1BC,EAD0BD,EAAXE,KACMC,eAArBF,YAER,OACER,EAAAW,EAAAC,cAACR,EAAA,EAAD,CAAQS,YAAaL,EAAYK,aAC/Bb,EAAAW,EAAAC,cAAA,OACEE,UAAU,0CACVC,MAAO,CACLC,gBAAe,gCAGjBhB,EAAAW,EAAAC,cAAA,MAAIE,UAAU,6CACXN,EAAYS,QAGjBjB,EAAAW,EAAAC,cAAA,WAASE,UAAU,WACjBd,EAAAW,EAAAC,cAAA,OAAKE,UAAU,aACbd,EAAAW,EAAAC,cAAA,OAAKE,UAAU,WACbd,EAAAW,EAAAC,cAACP,EAAA,EAAD,WAQZC,EAAcY,UAAY,CACxBT,KAAMU,IAAUC,MAAM,CACpBV,eAAgBS,IAAUC,MAAM,CAC9BZ,YAAaW,IAAUC,MAAM,CAC3BP,YAAaM,IAAUE,OACvBJ,MAAOE,IAAUE,cAMVf,YAER,IAAMR,EAAS,8HCzChBwB,4FACJC,OAAA,WAAS,IAEQC,EADEC,KAAKC,MAAdjB,KACsBkB,kBAAtBC,MAER,OACEC,EAAAlB,EAAAC,cAAA,OAAKE,UAAU,wBACZU,GACCA,EAAMM,IAAI,SAAAvB,GAAA,IAASwB,EAATxB,EAAGyB,KAAH,OACRH,EAAAlB,EAAAC,cAAA,OAAKE,UAAU,wBAAwBmB,IAAKF,EAAKG,IAC/CL,EAAAlB,EAAAC,cAAA,WACEE,UAAS,kDACPiB,EAAKvB,YAAY2B,aAAe,cAAgB,KAGlDN,EAAAlB,EAAAC,cAAA,cACGmB,EAAKvB,YAAY4B,cAChBP,EAAAlB,EAAAC,cAAA,OAAKE,UAAU,sBACbe,EAAAlB,EAAAC,cAACyB,EAAA,EAAD,CACEC,UAAW,CACTC,MAAOR,EAAKvB,YAAY4B,cACxBI,IAAG,qCACDT,EAAKd,UAKX,KACJY,EAAAlB,EAAAC,cAAA,KAAGE,UAAU,aACXe,EAAAlB,EAAAC,cAAC6B,EAAA,EAAD,CACE3B,UAAU,mCACV4B,GAAIX,EAAKY,OAAOC,MAEfb,EAAKvB,YAAYS,OAEpBY,EAAAlB,EAAAC,cAAA,mBACAiB,EAAAlB,EAAAC,cAAA,QAAME,UAAU,+BACbiB,EAAKvB,YAAYqC,QAIxBhB,EAAAlB,EAAAC,cAAA,SACGmB,EAAKe,QACNjB,EAAAlB,EAAAC,cAAA,WACAiB,EAAAlB,EAAAC,cAAA,WACAiB,EAAAlB,EAAAC,cAAC6B,EAAA,EAAD,CAAM3B,UAAU,SAAS4B,GAAIX,EAAKY,OAAOC,MAAzC,4BA7CKG,IAAMC,WAyD7B1B,EAASJ,UAAY,CACnBT,KAAMU,IAAUC,MAAM,CACpBO,kBAAmBR,IAAUC,MAAM,CACjCQ,MAAOT,IAAU8B,WAKRrD,EAAA,oBACbiC,EAAAlB,EAAAC,cAAC6B,EAAA,EAAD,CACES,MAAK,aA+BL3B,OAAQ,SAACd,EAAM0C,GAAP,OAAiBtB,EAAAlB,EAAAC,cAACU,EAAD,CAAUb,KAAMA,EAAM0C,MAAOA,KAhCxD1C,KAAA2C","file":"component---src-templates-blog-index-page-js-50831ece59e6f3bd7604.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport BlogRoll from '../components/BlogRoll'\n\nconst BlogIndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout languageKey={frontmatter.languageKey}>\n      <div\n        className=\"full-width-image-container margin-top-0\"\n        style={{\n          backgroundImage: `url('/img/banner-blog.jpg')`,\n        }}\n      >\n        <h1 className=\"home-title has-text-weight-bold is-size-1\">\n          {frontmatter.title}\n        </h1> \n      </div>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"content\">\n            <BlogRoll />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nBlogIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        languageKey: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  }),\n}\n\nexport default BlogIndexPage\n\nexport const pageQuery = graphql`\n  query BlogIndexPage($languageKey: String!) {\n    markdownRemark(frontmatter: { \n          templateKey: { eq: \"blog-index-page\" }\n          languageKey: { eq: $languageKey }\n        }) {\n      id\n      html\n      frontmatter {\n        title\n        languageKey\n      }\n    }\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article\n                className={`blog-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\n                }`}\n              >\n                <header>\n                  {post.frontmatter.featuredimage ? (\n                    <div className=\"featured-thumbnail\">\n                      <PreviewCompatibleImage\n                        imageInfo={{\n                          image: post.frontmatter.featuredimage,\n                          alt: `featured image thumbnail for post ${\n                            post.title\n                          }`,\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  <p className=\"post-meta\">\n                    <Link\n                      className=\"title has-text-primary is-size-4\"\n                      to={post.fields.slug}\n                    >\n                      {post.frontmatter.title}\n                    </Link>\n                    <span> &bull; </span>\n                    <span className=\"subtitle is-size-5 is-block\">\n                      {post.frontmatter.date}\n                    </span>\n                  </p>\n                </header>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}